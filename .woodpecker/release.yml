clone:
  git:
    image: plugins/git:next

pipeline:
  build:
    image: golang:1.16
    commands:
      - make release

  # publish-server:
  #   image: plugins/docker
  #   repo: woodpeckerci/woodpecker-server
  #   dockerfile: docker/Dockerfile.server
  #   secrets: [docker_username, docker_password]
  #   # TODO: only release as next after 0.15.0 got released
  #   tag: [next, latest]
  #   when:
  #     branch: master
  #     event: push

  # publish-server-alpine:
  #   image: plugins/docker
  #   repo: woodpeckerci/woodpecker-server
  #   dockerfile: docker/Dockerfile.server.alpine
  #   secrets: [ docker_username, docker_password ]
  #   # TODO: only release as next-alpine after 0.15.0 got released
  #   tag: [next-alpine, latest-alpine]
  #   when:
  #     branch: master
  #     event: push

  # publish-agent:
  #   image: plugins/docker
  #   repo: woodpeckerci/woodpecker-agent
  #   dockerfile: docker/Dockerfile.agent
  #   secrets: [docker_username, docker_password]
  #   # TODO: only release as next after 0.15.0 got released
  #   tag: [next, latest]
  #   when:
  #     branch: master
  #     event: push

  # publish-agent-alpine:
  #   image: plugins/docker
  #   repo: woodpeckerci/woodpecker-agent
  #   dockerfile: docker/Dockerfile.agent.alpine
  #   secrets: [ docker_username, docker_password ]
  #   # TODO: only release as next-alpine after 0.15.0 got released
  #   tag: [next-alpine, latest-alpine]
  #   when:
  #     branch: master
  #     event: push

  # release-server:
  #   image: plugins/docker
  #   repo: woodpeckerci/woodpecker-server
  #   dockerfile: docker/Dockerfile.server
  #   secrets: [docker_username, docker_password]
  #   tag: [latest, "${DRONE_TAG}"]
  #   when:
  #     event: tag

  # release-server-alpine:
  #   image: plugins/docker
  #   repo: woodpeckerci/woodpecker-server
  #   dockerfile: docker/Dockerfile.server.alpine
  #   secrets: [ docker_username, docker_password ]
  #   tag: [latest-alpine, "${DRONE_TAG}-alpine"]
  #   when:
  #     event: tag

  # release-agent:
  #   image: plugins/docker
  #   repo: woodpeckerci/woodpecker-agent
  #   dockerfile: docker/Dockerfile.agent
  #   secrets: [docker_username, docker_password]
  #   tag: [latest, "${DRONE_TAG}"]
  #   when:
  #     event: tag

  # release-agent-alpine:
  #   image: plugins/docker
  #   repo: woodpeckerci/woodpecker-agent
  #   dockerfile: docker/Dockerfile.agent.alpine
  #   secrets: [ docker_username, docker_password ]
  #   tag: [latest-alpine, "${DRONE_TAG}-alpine"]
  #   when:
  #     event: tag

  # release-cli:
  #   image: plugins/github-release
  #   files:
  #     - cli/release/woodpecker_*.tar.gz
  #     - cli/release/woodpecker_checksums.txt
  #   secrets:
  #     - source: github_token
  #       target: github_release_api_key
  #   when:
  #     event: tag

  build-docker-server:
    group: build-docker
    image: anbraten/kaniko:v1.6.0-debug
    secrets: [docker_username, docker_password]
    environment:
      - IMAGE_TYPE=server
    commands:
      - export WOODPECKER_VERSION=$(make version)
      - .woodpecker/scripts/build-docker-image.sh
    when:
      event: [push, tag]
      branch: master

  build-docker-agent:
    group: build-docker
    image: anbraten/kaniko:v1.6.0-debug
    secrets: [docker_username, docker_password]
    environment:
      - IMAGE_TYPE=agent
    commands:
      - export WOODPECKER_VERSION=$(make version)
      - .woodpecker/scripts/build-docker-image.sh
    when:
      event: [push, tag]
      branch: master

  build-docker-cli:
    group: build-docker
    image: anbraten/kaniko:v1.6.0-debug
    secrets: [docker_username, docker_password]
    environment:
      - IMAGE_TYPE=cli
    commands:
      - export WOODPECKER_VERSION=$(make version)
      - .woodpecker/scripts/build-docker-image.sh
    when:
      event: [push, tag]
      branch: master

  build-adk-deb-rpm:
    group: build-docker
    image: golang:1.16
    commands:
      - go install github.com/goreleaser/nfpm/v2/cmd/nfpm@v1.10.3
      - nfpm package --config ./nfpm/nfpm-server.yml --target ./dist --packager apk
      - nfpm package --config ./nfpm/nfpm-server.yml --target ./dist --packager deb
      - nfpm package --config ./nfpm/nfpm-server.yml --target ./dist --packager rpm
      - nfpm package --config ./nfpm/nfpm-agent.yml --target ./dist --packager apk
      - nfpm package --config ./nfpm/nfpm-agent.yml --target ./dist --packager deb
      - nfpm package --config ./nfpm/nfpm-agent.yml --target ./dist --packager rpm
      - nfpm package --config ./nfpm/nfpm-cli.yml --target ./dist --packager apk
      - nfpm package --config ./nfpm/nfpm-cli.yml --target ./dist --packager deb
      - nfpm package --config ./nfpm/nfpm-cli.yml --target ./dist --packager rpm
    when:
      event: [push, tag]
      branch: master

  changelog:
    image: alpine:3.14.1
    commands:
      - apk add make
      - curl -L https://dl.gitea.io/changelog-tool/master/changelog-master-linux-amd64 > changelog
      - chmod +x ./changelog
      - ./changelog -m=$(make version) generate > CHANGELOG-latest.md
      - ./changelog -m=$(make version) contributors >> CHANGELOG-latest.md
      - echo -e "$(cat CHANGELOG-latest.md)\n$(cat CHANGELOG.md)" > CHANGELOG.md
      # TODO push changed CHANGELOG.md with woodpecker-bot
    when:
      event: tag

  checksums:
    image: golang:1.16
    commands:
      - make release-checksums
    when:
      event: tag

  # TODO: upload build artifacts for pushes to master

  release:
    image: plugins/github-release
    files:
      - dist/*.tar.gz
      - dist/*.apk
      - dist/*.deb
      - dist/*.rpm
      - dist/checksums.txt
    title: ${DRONE_TAG##v}
    note: CHANGELOG-latest.md
    secrets:
      - source: github_token
        target: github_release_api_key
    when:
      event: tag

depends_on:
  - test
