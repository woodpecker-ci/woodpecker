{
  "cancel": "Cancel",
  "login": "Login",
  "welcome": "Welcome to Woodpecker",
  "repos": "Repos",
  "repositories": "Repositories",
  "docs": "Docs",
  "api": "API",
  "logout": "Logout",
  "search": "Search…",
  "username": "Username",
  "password": "Password",
  "back": "Back",
  "unknown_error": "An unknown error occurred",
  "documentation_for": "Documentation for \"{topic}\"",
  "pipeline_feed": "Pipeline feed",
  "empty_list": "No {entity} found!",
  "not_found": {
    "not_found": "Whoa 404, either we broke something or you had a typing mishap :-/",
    "back_home": "Back to home"
  },
  "errors": {
    "not_found": "Server could not find requested object"
  },
  "time": {
    "template": "MMM D, YYYY, HH:mm z",
    "not_started": "not started yet"
  },
  "repo": {
    "manual_pipeline": {
      "title": "Trigger a manual pipeline run",
      "trigger": "Run pipeline",
      "select_branch": "Select branch",
      "variables": {
        "delete": "Delete variable",
        "title": "Additional pipeline variables",
        "desc": "Specify additional variables to use in your pipeline. Variables with the same name will be overwritten.",
        "name": "Variable name",
        "value": "Variable value"
      }
    },
    "deploy_pipeline": {
      "title": "Trigger deployment event for current pipeline #{pipelineId}",
      "enter_target": "Target deployment environment",
      "enter_task": "Deployment task",
      "trigger": "Deploy",
      "variables": {
        "delete": "Delete variable",
        "title": "Additional pipeline variables",
        "desc": "Specify additional variables to use in your pipeline. Variables with the same name will be overwritten.",
        "name": "Variable name",
        "value": "Variable value"
      }
    },
    "activity": "Activity",
    "branches": "Branches",
    "pull_requests": "Pull requests",
    "add": "Add repository",
    "user_none": "This organization / user does not have any projects yet.",
    "not_allowed": "You are not allowed to access this repository",
    "enable": {
      "enable": "Enable",
      "enabled": "Already enabled",
      "disabled": "Disabled",
      "success": "Repository enabled"
    },
    "open_in_forge": "Open repository in forge",
    "settings": {
      "not_allowed": "You are not allowed to access this repository's settings",
      "general": {
        "general": "General",
        "project": "Project settings",
        "save": "Save settings",
        "success": "Repository settings updated",
        "pipeline_path": {
          "path": "Pipeline path",
          "default": "By default: .woodpecker/*.{'{yaml,yml}'} -> .woodpecker.yaml -> .woodpecker.yml",
          "desc": "Path to your pipeline config (for example {0}). Folders should end with a {1}.",
          "desc_path_example": "my/path/"
        },
        "allow_pr": {
          "allow": "Allow Pull Requests",
          "desc": "Pipelines can run on pull requests."
        },
        "allow_deploy": {
          "allow": "Allow deployments",
          "desc": "Allow deployments from successful pipelines. Only use if you trust all users with push access."
        },
        "protected": {
          "protected": "Protected",
          "desc": "Every pipeline needs to be approved before being executed."
        },
        "netrc_only_trusted": {
          "netrc_only_trusted": "Only inject netrc credentials into trusted containers",
          "desc": "Only inject netrc credentials into trusted containers (recommended)."
        },
        "trusted": {
          "trusted": "Trusted",
          "desc": "Underlying pipeline containers get access to escalated capabilities like mounting volumes."
        },
        "visibility": {
          "visibility": "Project visibility",
          "public": {
            "public": "Public",
            "desc": "Every user can see your project without being logged in."
          },
          "private": {
            "private": "Private",
            "desc": "Only you and other owners of the repository can see this project."
          },
          "internal": {
            "internal": "Internal",
            "desc": "Only authenticated users of the Woodpecker instance can see this project."
          }
        },
        "timeout": {
          "timeout": "Timeout",
          "minutes": "minutes"
        },
        "cancel_prev": {
          "cancel": "Cancel previous pipelines",
          "desc": "Enable to cancel pending and running pipelines of the same event and context before starting the newly triggered one."
        }
      },
      "registries": {
        "registries": "Registries",
        "credentials": "Registry credentials",
        "desc": "Registries credentials can be added to use private images for your pipeline.",
        "show": "Show registries",
        "add": "Add registry",
        "none": "There are no registry credentials yet.",
        "save": "Save registry",
        "created": "Registry credentials created",
        "saved": "Registry credentials saved",
        "deleted": "Registry credentials deleted",
        "address": {
          "address": "Address",
          "placeholder": "Registry Address (e.g. docker.io)"
        },
        "edit": "Edit registry",
        "delete": "Delete registry"
      },
      "crons": {
        "crons": "Crons",
        "desc": "Cron jobs can be used to trigger pipelines on a regular basis.",
        "show": "Show crons",
        "add": "Add cron",
        "none": "There are no crons yet.",
        "save": "Save cron",
        "created": "Cron created",
        "saved": "Cron saved",
        "deleted": "Cron deleted",
        "next_exec": "Next execution",
        "not_executed_yet": "Not executed yet",
        "run": "Run now",
        "branch": {
          "title": "Branch",
          "placeholder": "Branch (uses default branch if empty)"
        },
        "name": {
          "name": "Name",
          "placeholder": "Name of the cron job"
        },
        "schedule": {
          "title": "Schedule (based on UTC)",
          "placeholder": "Schedule"
        },
        "edit": "Edit cron",
        "delete": "Delete cron"
      },
      "badge": {
        "badge": "Badge",
        "type": "Syntax",
        "type_url": "URL",
        "type_markdown": "Markdown",
        "type_html": "HTML",
        "branch": "Branch"
      },
      "actions": {
        "actions": "Actions",
        "repair": {
          "repair": "Repair repository",
          "success": "Repository repaired"
        },
        "disable": {
          "disable": "Disable repository",
          "success": "Repository disabled"
        },
        "enable": {
          "enable": "Enable repository",
          "success": "Repository enabled"
        },
        "delete": {
          "delete": "Delete repository",
          "confirm": "All data will be lost after this action!!!\n\nDo you really want to proceed?",
          "success": "Repository deleted"
        }
      }
    },
    "pipeline": {
      "tasks": "Tasks",
      "config": "Config",
      "files": "Changed files ({files})",
      "no_pipelines": "No pipelines have been started yet.",
      "no_pipeline_steps": "No pipeline steps available!",
      "step_not_started": "This step hasn't started yet.",
      "pipelines_for": "Pipelines for branch \"{branch}\"",
      "pipelines_for_pr": "Pipelines for pull request #{index}",
      "exit_code": "Exit Code {exitCode}",
      "loading": "Loading…",
      "pipeline": "Pipeline #{pipelineId}",
      "log_title": "Step Logs",
      "log_download_error": "There was an error while downloading the log file",
      "log_delete_confirm": "Do you really want to delete logs of this step?",
      "log_delete_error": "There was an error while deleting the step logs",
      "actions": {
        "cancel": "Cancel",
        "restart": "Restart",
        "canceled": "This step has been canceled.",
        "cancel_success": "Pipeline canceled",
        "deploy": "Deploy",
        "restart_success": "Pipeline restarted",
        "log_download": "Download",
        "log_delete": "Delete",
        "log_auto_scroll": "Automatically scroll down",
        "log_auto_scroll_off": "Turn off automatic scrolling"
      },
      "protected": {
        "awaits": "This pipeline is awaiting approval by a maintainer!",
        "approve": "Approve",
        "decline": "Decline",
        "declined": "This pipeline has been declined!",
        "approve_success": "Pipeline approved",
        "decline_success": "Pipeline declined"
      },
      "event": {
        "push": "Push",
        "tag": "Tag",
        "pr": "Pull Request",
        "deploy": "Deploy",
        "cron": "Cron",
        "manual": "Manual",
        "release": "Release"
      },
      "status": {
        "status": "Status: {status}",
        "blocked": "blocked",
        "pending": "pending",
        "running": "running",
        "started": "started",
        "skipped": "skipped",
        "success": "success",
        "declined": "declined",
        "error": "error",
        "failure": "failure",
        "killed": "killed"
      },
      "errors": "Errors ({count})",
      "warnings": "Warnings ({count})",
      "show_errors": "Show errors",
      "we_got_some_errors": "Oh no, we got some errors!"
    }
  },
  "org": {
    "settings": {
      "not_allowed": "You are not allowed to access this organization's settings",
      "secrets": {
        "desc": "Organization secrets can be passed to all organization's repository individual pipeline steps at runtime as environmental variables."
      }
    }
  },
  "admin": {
    "settings": {
      "not_allowed": "You are not allowed to access server settings",
      "secrets": {
        "desc": "Global secrets can be passed to all repositories individual pipeline steps at runtime as environmental variables.",
        "warning": "These secrets will be available for all server users."
      },
      "agents": {
        "agents": "Agents",
        "desc": "Agents registered for this server",
        "none": "There are no agents yet.",
        "id": "ID",
        "add": "Add agent",
        "save": "Save agent",
        "show": "Show agents",
        "created": "Agent created",
        "saved": "Agent saved",
        "deleted": "Agent deleted",
        "name": {
          "name": "Name",
          "placeholder": "Name of the agent"
        },
        "no_schedule": {
          "name": "Disable agent",
          "placeholder": "Stop agent from taking new tasks"
        },
        "token": "Token",
        "platform": {
          "platform": "Platform",
          "badge": "platform"
        },
        "backend": {
          "backend": "Backend",
          "badge": "backend"
        },
        "capacity": {
          "capacity": "Capacity",
          "desc": "The max amount of parallel pipelines executed by this agent.",
          "badge": "capacity"
        },
        "version": "Version",
        "last_contact": "Last contact",
        "never": "Never",
        "delete_confirm": "Do you really want to delete this agent? It wont be able to connected to the server anymore.",
        "edit_agent": "Edit agent",
        "delete_agent": "Delete agent"
      },
      "queue": {
        "queue": "Queue",
        "desc": "Tasks waiting to be executed by agents",
        "pause": "Pause",
        "resume": "Resume",
        "paused": "Queue is paused",
        "resumed": "Queue is resumed",
        "tasks": "Tasks",
        "task_running": "Task is running",
        "task_pending": "Task is pending",
        "task_waiting_on_deps": "Task is waiting on dependencies",
        "agent": "agent",
        "waiting_for": "waiting for",
        "stats": {
          "completed_count": "Completed Tasks",
          "worker_count": "Free",
          "running_count": "Running",
          "pending_count": "Pending",
          "waiting_on_deps_count": "Waiting on dependencies"
        }
      },
      "users": {
        "users": "Users",
        "desc": "Users registered for this server",
        "login": "Login",
        "email": "Email",
        "avatar_url": "Avatar URL",
        "save": "Save user",
        "cancel": "Cancel",
        "show": "Show users",
        "add": "Add user",
        "none": "There are no users yet.",
        "delete_confirm": "Do you really want to delete this user? This will also delete all repositories owned by this user.",
        "deleted": "User deleted",
        "created": "User created",
        "saved": "User saved",
        "admin": {
          "admin": "Admin",
          "placeholder": "User is an admin"
        },
        "delete_user": "Delete user",
        "edit_user": "Edit user"
      },
      "orgs": {
        "orgs": "Organizations",
        "desc": "Organizations owning repositories on this server",
        "none": "There are no organizations yet.",
        "org_settings": "Organization settings",
        "delete_org": "Delete organization",
        "deleted": "Organization deleted",
        "delete_confirm": "Do you really want to delete this organization? This will also delete all repositories owned by this organization.",
        "view": "View organization"
      },
      "repos": {
        "repos": "Repositories",
        "desc": "Repositories that are or were enabled on this server",
        "none": "There are no repositories yet.",
        "view": "View repository",
        "settings": "Repository settings",
        "disabled": "Disabled",
        "repair": {
          "repair": "Repair all",
          "success": "Repositories repaired"
        }
      }
    }
  },
  "user": {
    "settings": {
      "settings": "User Settings",
      "general": {
        "general": "General",
        "language": "Language",
        "theme": {
          "theme": "Theme",
          "light": "Light",
          "dark": "Dark",
          "auto": "Auto"
        }
      },
      "secrets": {
        "desc": "User secrets can be passed to all user's repository individual pipeline steps at runtime as environmental variables."
      },
      "cli_and_api": {
        "cli_and_api": "CLI & API",
        "desc": "Personal Access Token, CLI and API usage",
        "token": "Personal Access Token",
        "api_usage": "Example API Usage",
        "cli_usage": "Example CLI Usage",
        "download_cli": "Download CLI",
        "reset_token": "Reset token",
        "swagger_ui": "Swagger UI"
      }
    },
    "oauth_error": "Error while authenticating against OAuth provider",
    "internal_error": "Some internal error occurred",
    "access_denied": "You are not allowed to login"
  },
  "secrets": {
    "secrets": "Secrets",
    "desc": "Secrets can be passed to individual pipeline steps at runtime as environmental variables.",
    "none": "There are no secrets yet.",
    "add": "Add secret",
    "save": "Save secret",
    "show": "Show secrets",
    "name": "Name",
    "value": "Value",
    "delete_confirm": "Do you really want to delete this secret?",
    "deleted": "Secret deleted",
    "created": "Secret created",
    "saved": "Secret saved",
    "images": {
      "images": "Available for following images",
      "desc": "List of images where this secret is available, leave empty to allow all images"
    },
    "events": {
      "events": "Available at following events",
      "pr_warning": "Please be careful with this option as a bad actor can submit a malicious pull request that exposes your secrets."
    },
    "edit": "Edit secret",
    "delete": "Delete secret"
  },
  "default": "default",
  "info": "Info",
  "running_version": "You are running Woodpecker {0}",
  "update_woodpecker": "Please update your Woodpecker instance to {0}",
  "global_level_secret": "global secret",
  "org_level_secret": "organization secret",
  "login_to_cli": "Login to CLI",
  "login_to_cli_description": "By continuing you will be logged in to the CLI.",
  "abort": "Abort",
  "cli_login_success": "Login to CLI successful",
  "cli_login_failed": "Login to CLI failed",
  "cli_login_denied": "Login to CLI denied",
  "return_to_cli": "You can now close this tab and return to the CLI.",
  "settings": "Settings"
}
