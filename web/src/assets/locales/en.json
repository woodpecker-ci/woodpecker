{
  "login": "Login",
  "welcome": "Welcome to Woodpecker",
  "repos": "Repos",
  "repositories": "Repositories",
  "docs": "Docs",
  "logout": "Logout",
  "search": "Search...",
  "username": "Username",
  "password": "Password",
  "url": "URL",
  "unknown_error": "An unknown error occurred",

  "not_found": {
    "not_found": "Whoa 404, either we broke something or you had a typing mishap :-/",
    "back_home": "Back to home"
  },

  "time": {
    "tmpl": "MMM D, YYYY, HH:mm z",
    "weeks_short": "w",
    "days_short": "d",
    "hours_short": "h",
    "min_short": "min",
    "sec_short": "sec",
    "not_started": "not started yet"
  },

  "repo": {
    "activity": "Activity",
    "branches": "Branches",
    "add": "Add repository",
    "user_none": "This organization / user does not have any projects yet.",
    "not_allowed": "Not allowed to access this repository",

    "enable": {
      "reload": "Reload repositories",
      "enable": "Enable",
      "enabled": "Already enabled",
      "success": "Repository enabled",
      "list_reloaded": "Repository list reloaded"
    },

    "settings": {
      "settings": "Settings",
      "not_allowed": "Not allowed to access this repository's settings",

      "general": {
        "general": "General",
        "project": "Project settings",
        "save": "Save settings",
        "success": "Repository settings updated",

        "pipeline_path": {
          "path": "Pipeline path",
          "default": "By default: .woodpecker/*.yml -> .woodpecker.yml -> .drone.yml",
          "desc": "Path to your pipeline config (for example <span class=\"bg-gray-300 dark:bg-dark-700 rounded-md px-1\">my/path/</span>). Folders should end with a <span class=\"bg-gray-300 dark:bg-dark-700 rounded-md px-1\">/</span>."
        },

        "allow_pr": {
          "allow": "Allow Pull Requests",
          "desc": "Pipelines can run on pull requests."
        },

        "protected": {
          "protected": "Protected",
          "desc": "Every pipeline needs to be approved before being executed."
        },
        "trusted": {
          "trusted": "Trusted",
          "desc": "Underlying pipeline containers get access to escalated capabilities like mounting volumes."
        },
        "visibility": {
          "visibility": "Project visibility",

          "public": {
            "public": "Public",
            "desc": "Every user can see your project without being logged in."
          },
          "private": {
            "private": "Private",
            "desc": "Only you and other owners of the repository can see this project."
          },
          "internal": {
            "internal": "Internal",
            "desc": "Only authenticated users of the Woodpecker instance can see this project."
          }
        },

        "timeout": {
          "timeout": "Timeout",
          "minutes": "minutes"
        },

        "cancel_prev": {
          "cancel": "Cancel previous pipelines",
          "desc": "Enable to cancel pending and running pipelines of the same event and context before starting the newly triggered one."
        }
      },

      "secrets": {
        "secrets": "Secrets",
        "desc": "Secrets can be passed to individual pipeline steps at runtime as environmental variables.",
        "none": "There are no secrets yet.",
        "add": "Add secret",
        "save": "Save secret",
        "show": "Show secrets",
        "name": "Name",
        "value": "Value",
        "deleted": "Secret deleted",
        "created": "Secret created",
        "saved": "Secret saved",

        "images": {
          "images": "Available for following images",
          "desc": "Comma separated list of images where this secret is available, leave empty to allow all images"
        },
        "events": {
          "events": "Available at following events",
          "pr_warning": "Please be careful with this option as a bad actor can submit a malicious pull request that exposes your secrets."
        }
      },

      "registries": {
        "registries": "Registries",
        "creds": "Registry credentials",
        "desc": "Registries credentials can be added to use private images for your pipeline.",
        "show": "Show registries",
        "add": "Add registry",
        "none": "There are no registry credentials yet.",
        "save": "Save registry",
        "created": "Registry credentials created",
        "saved": "Registry credentials saved",
        "deleted": "Registry credentials deleted",

        "address": {
          "address": "Address",
          "placeholder": "Registry Address (e.g. docker.io)"
        }
      },

      "crons": {
        "crons": "Crons",
        "desc": "Cron jobs can be used to trigger pipelines on a regular basis.",
        "show": "Show crons",
        "add": "Add cron",
        "none": "There are no crons yet.",
        "save": "Save cron",
        "created": "Cron created",
        "saved": "Cron saved",
        "deleted": "Cron deleted",
        "next_exec": "Next execution",
        "not_executed_yet": "Not executed yet",
        "branch": {
          "branch": "Branch"
        },
        "title": {
          "title": "Title",
          "placeholder": "Title of the cron job"
        },
        "schedule": {
          "schedule": "Schedule"
        }
      },

      "badge": {
        "badge": "Badge",
        "url_branch": "URL for specific branch",
        "markdown": "Markdown"
      },

      "actions": {
        "actions": "Actions",

        "repair": {
          "repair": "Repair repository",
          "success": "Repository repaired"
        },
        "disable": {
          "disable": "Disable repository",
          "success": "Repository disabled"
        },
        "delete": {
          "delete": "Delete repository",
          "confirm": "All data will be lost after this action!!!\n\nDo you really want to proceed?",
          "success": "Repository deleted"
        }
      }
    },

    "build": {
      "created": "Created",
      "tasks": "Tasks",
      "config": "Config",
      "files": "Changed files ({files})",
      "no_files": "No files have been changed.",
      "execution_error": "Execution error",
      "no_pipelines": "No pipelines have been started yet.",
      "no_pipeline_steps": "No pipeline steps available!",
      "step_not_started": "This step hasn't started yet.",
      "pipelines_for": "Pipelines for branch \"{branch}\"",
      "exit_code": "exit code {exitCode}",
      "loading": "Loading ...",
      "pipeline": "Pipeline #{buildId}",

      "actions": {
        "cancel": "Cancel",
        "restart": "Restart",
        "canceled": "This step has been canceled.",
        "cancel_success": "Pipeline canceled",
        "restart_success": "Pipeline restarted"
      },
      "protected": {
        "awaits": "This pipeline is awaiting approval by some maintainer!",
        "approve": "Approve",
        "decline": "Decline",
        "declined": "This pipeline has been declined!",
        "approve_success": "Pipeline approved",
        "decline_success": "Pipeline declined"
      },
      "event": {
        "push": "Push",
        "tag": "Tag",
        "pr": "Pull Request",
        "deploy": "Deploy"
      }
    }
  },

  "user": {
    "oauth_error": "Error while authenticating against OAuth provider",
    "internal_error": "Some internal error occurred",
    "access_denied": "You are not allowed to login",
    "token": "Your Personal Token",
    "shell_setup": "Shell setup",
    "api_usage": "Example API Usage",
    "cli_usage": "Example CLI Usage",
    "dl_cli": "Download CLI",
    "shell_setup_before": "do shell setup steps before"
  }
}
