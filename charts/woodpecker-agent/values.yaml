replicaCount: 2

image:
  registry: docker.io
  repository: woodpeckerci/woodpecker-agent
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

env:
  WOODPECKER_SERVER: "woodpecker-server.<namespace>.svc.cluster.local:9000"
  WOODPECKER_BACKEND: kubernetes
  WOODPECKER_BACKEND_K8S_NAMESPACE: woodpecker
  WOODPECKER_BACKEND_K8S_STORAGE_CLASS: ""
  WOODPECKER_BACKEND_K8S_VOLUME_SIZE: 10G
  WOODPECKER_BACKEND_K8S_STORAGE_RWX: true

# Docker-in-Docker is normally not needed as Woodpecker natively supports Kubernetes
dind:
  enabled: false
  image: "docker:20.10.12-dind"
  env:
    DOCKER_DRIVER: "overlay2"
  resources: {}

extraSecretNamesForEnvFrom:
- woodpecker-secret

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

## Using topology spread constraints, you can ensure that there is at least one agent
## pod for each topology zone, e.g. one per arch for for multi-architecture clusters
## or one for each region for geographically distributed cloud-hosted clusters.
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
topologySpreadConstraints: []
# - maxSkew: 1
#   topologyKey: "beta.kubernetes.io/arch"
#   whenUnsatisfiable: "DoNotSchedule"
#   labelSelector:
#     matchLabels:
#       "app.kubernetes.io/name": woodpecker-agent
